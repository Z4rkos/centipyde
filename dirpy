#!/bin/python
"""
A little program that is ment to simplify the process of writing web
'hacking' tools for me.
"""

from executor import executor
from request_handler import RequestHandlerFactory
from wordlist_loader import load_wordlist
from get_args import get_args


def main():

    mode, executor_args, wordlist_args, request_handler_args = get_args()

    wordlist_generator = load_wordlist(wordlist_args)

    stuff = RequestHandlerFactory.get_request_handler(mode)

    request_handler = stuff(request_handler_args)

    executor(wordlist_generator, request_handler, executor_args)


if __name__ == '__main__':
    main()


"""
TODO:
    Add more modes:
        Would be nice with some that did alot of predifined things,
        like a 'quick_fuzz' mode that went through cookies, headers, and URL
        and fuzzed them with bad chars or somethingself.
        Should write more simple functionality first so modes that use several
        methods can use them (composition).

    Reformat/rewrite get_args.py:
        Should use subparsers for the different modes. Not sure how they work,
        so need to figure that out.
        Maybe make the subparsers classes or something to limit the need to
        rewrite similar parsers by inheriting from them instead.

    Save progress:
        Could implement it with pickle or something, just have to learn how
        that works first.

    But all of this into docs or something :P


NOTES:
    There are currently alot of wierd things as I am implementing some things
    I don't  fully understand, but that is kinda the point. Trying new design
    patterns and techniques to accomplish some goal.

    The whole factory thing is kiiiiiinda not needed, as I could just do some
    variant of:
        request_handler = REQUEST_HANDLERS[mode]
    However, this seams less flexible, and more importantly, alot less cool ;)
"""
